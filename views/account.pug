extends layout

block content
  if account.isContract
    h3 Contract #{account.address}
  else
    h3 Account #{account.address}
  table.table
    tr
      td Balance:
      td #{ethformatter(account.balance)}
    if account.name
      tr
        td Name:
        td #{account.name}

  div
    ul.nav.nav-tabs(role='tablist')
      li.active(role='presentation')
        a(href='#transactions', aria-controls='transactions', role='tab', data-toggle='tab') Transactions
      if account.isContract
        li(role='presentation')
          a(href='#code', aria-controls='code', role='tab', data-toggle='tab') Code
      if account.source
        li(role='presentation')
          a(href='#source', aria-controls='source', role='tab', data-toggle='tab') Source
        li(role='presentation')
          a(href='#contractState', aria-controls='source', role='tab', data-toggle='tab') Contract State
    .tab-content
      #transactions.tab-pane.active(role='tabpanel')
        table.table
          thead
            tr
              th Hash
              th Block
              th Age
              th From
              th
              th To
              th Amount
              th Fee
          tbody
            for tx in account.transactions
              tr
                td
                  a(href="/tx/" + tx.hash) #{tx.hash.substring(0, 10)}...
                td
                  a(href="/block/" + tx.block) #{tx.block}
                td #{moment.unix(tx.timestamp).fromNow()}
                td
                  a(href="/account/" + tx.from) #{nameformatter.format(tx.from)}
                td
                  if tx.from === account.address
                    span.glyphicon.glyphicon-export(style="color: red;")
                  else
                    span.glyphicon.glyphicon-import(style="color: green;")
                td
                  if !tx.to
                    a(href="/account/" + tx.contractAddress) Created contract (#{tx.contractAddress})
                  else
                    a(href="/account/" + tx.to) #{nameformatter.format(tx.to)}
                td #{ethformatter(tx.value)}
                td #{ethformatter(tx.gas)}
        nav
          span.pull-left.pagination Total transactions: #{account.total}
          ul.pagination.pull-right
            if currentPage === 1
              li.page-item.disabled
                a.page-link Previous
            else
              li.page-item
                a(href="?page=" + (currentPage - 1)).page-link Previous
            each page in pages
              if page === currentPage
                li.page-item.active
                  a.page-link #{page}
              else
                li.page-item
                  a(href='?page=' + page).page-link #{page}
            if currentPage >= totalPages
              li.page-item.disabled
                a.page-link Next
            else
              li.page-item
                a(href="?page=" + (currentPage + 1)).page-link Next

      if account.isContract
        #code.tab-pane(role='tabpanel')
          h3 Code
          if !account.source
            a(href="/contract/verify") Upload source
          pre #{account.code}
      if account.source
        #source.tab-pane(role='tabpanel')
          h4 Source
          pre #{account.source.source}
          h4 ABI
          pre #{account.source.abi}
          h4 Constructor
          pre #{account.source.constructorArgs}
        #contractState.tab-pane(role='tabpanel')
          h4 Current contract state
          table.table
            thead
              tr
                th Function
                th Result
            tbody
              for item in account.contractState
                tr
                  td #{item.name}
                  td #{item.result}
